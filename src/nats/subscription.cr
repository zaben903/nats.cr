# Copyright 2019-2025 The NATS Authors
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

module NATS
  # Represents a subscription to a NATS subject.
  struct Subscription
    # The subject name to subscribe to.
    getter subject : String
    # If specified, the subscriber will join this queue group.
    getter queue_group : String? = nil
    # A unique alphanumeric subscription ID, generated by the client.
    getter sid : UInt64
    # The callback to be invoked when a message is received.
    property callback : Message::MSG -> Nil
    # The client that owns this subscription.
    getter client : Client

    def initialize(
      @subject : String,
      @sid : UInt64,
      @callback : Message::MSG -> Nil,
      @client : Client,
      @queue_group : String? = nil,
    )
    end

    def unsubscribe
      client.unsubscribe(self)
    end
  end
end
